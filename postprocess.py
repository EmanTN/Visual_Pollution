import os
import csv
import pandas as pd
import argparse


x_max = 1920
y_max = 1080

#Return list of images without predictions
def read_csv_cols(file1, file2, col1, col2):
    df1 = pd.read_csv(file1)
    df2 = pd.read_csv(file2)
    df1 = df1.sort_values(col1).drop_duplicates(subset=col1, keep='first')
    df2 = df2.sort_values(col2).drop_duplicates(subset=col2, keep='first')
    print(df1.shape)
    print(df2.shape)
    df1[~df1.isin(df2)]
    print(df1.shape)

    return df1[~df1[col1].isin(df2[col2])]

#Parse arguments
parser = argparse.ArgumentParser()

# Add the three arguments with specific names
parser.add_argument("--labels_path", default="./labels", help="path to folder of labels generated by the model.")
parser.add_argument("--output_file", default="labels.csv", help="name of output result file of type .csv")
parser.add_argument("--test_path", default="test.csv", help="path to test.csv file")

args = parser.parse_args()

# Assign the parsed arguments to variables
labels_path = args.labels_path
output_file = args.output_file
test_path = args.test_path

#Create result file
with open(output_file, 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(['class','image_path','name','xmax','xmin','ymax','ymin'])
    for file in os.listdir(labels_path):
        if file.endswith(".txt"):
            with open(os.path.join(labels_path, file), 'r') as txt_file:
                lines = txt_file.readlines()
                for line in lines:
                    line = line.strip().split(" ")
                    col1 = line[0]
                    col2 = line[1]
                    col3 = line[2]
                    col4 = line[3]
                    col5 = line[4]
                
                    file_name = os.path.splitext(file)[0] + '.jpg'
                   
                    mapping = ['GRAFFITI', 'FADED_SIGNAGE', 'POTHOLES', 'GARBAGE',
                    'CONSTRUCTION_ROAD', 'BROKEN_SIGNAGE', 'BAD_STREETLIGHT', 'BAD_BILLBOARD',
                    'SAND_ON_ROAD', 'CLUTTER_SIDEWALK', 'UNKEPT_FACADE']
                    
                    w = float(col4) * x_max
                    h = float(col5) * y_max

                    x1 = ((2 * float(col2) * x_max) - w)/2
                    y1 = ((2 * float(col3) * y_max) - h)/2
                    
                    x2 = x1 + w
                    y2 = y1 + h

                    #X_max: 1920 -> 960
                    #Y_max: 1080 -> 540
                    x1/=2
                    x2/=2
                    
                    y1/=2
                    y2/=2
                    

                    row = [col1, file_name, mapping[int(col1)], x2, x1, y2, y1]
                    writer.writerow(row)


#Find images without predictions
diff = read_csv_cols(test_path, output_file, 'image_path', 'image_path')

#Add images without predictions to result file
with open(output_file, 'a', newline='') as f:
    writer = csv.writer(f)
    
    for index, row in diff.iterrows():
        row = ['', row[0], '', '', '', '', '']
        writer.writerow(row)
